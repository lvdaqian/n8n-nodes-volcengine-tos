name: Release and Publish

on:
  release:
    types: [published]

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm test -- --testPathIgnorePatterns=".*\.integration\.test\.ts$"
        
      - name: Build project
        run: npm run build
        
      # Only publish on Node.js 20.x to avoid duplicate publishes
      - name: Update package version
        if: matrix.node-version == '20.x'
        run: |
          # Extract version from release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "Updating package.json version to $VERSION"
          npm version $VERSION --no-git-tag-version
          
      - name: Publish to NPM
        if: matrix.node-version == '20.x'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create build artifacts
        if: matrix.node-version == '20.x'
        run: |
          mkdir -p artifacts
          cp package.json artifacts/
          cp README.md artifacts/
          cp README_CN.md artifacts/
          tar -czf artifacts/n8n-nodes-volcengine-tos-${{ github.ref_name }}.tar.gz dist/ package.json README.md README_CN.md
          
      - name: Upload artifacts to release
        if: matrix.node-version == '20.x'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./artifacts/n8n-nodes-volcengine-tos-${{ github.ref_name }}.tar.gz
          asset_name: n8n-nodes-volcengine-tos-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip